//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GladiusJournal.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGladiusJournalListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class GladiusJournalBaseListener : IGladiusJournalListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.root"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRoot([NotNull] GladiusJournalParser.RootContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.root"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRoot([NotNull] GladiusJournalParser.RootContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.rumour"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRumour([NotNull] GladiusJournalParser.RumourContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.rumour"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRumour([NotNull] GladiusJournalParser.RumourContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.conversation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConversation([NotNull] GladiusJournalParser.ConversationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.conversation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConversation([NotNull] GladiusJournalParser.ConversationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.minDays"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinDays([NotNull] GladiusJournalParser.MinDaysContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.minDays"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinDays([NotNull] GladiusJournalParser.MinDaysContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.ursulaChoice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUrsulaChoice([NotNull] GladiusJournalParser.UrsulaChoiceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.ursulaChoice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUrsulaChoice([NotNull] GladiusJournalParser.UrsulaChoiceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.valensChoice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValensChoice([NotNull] GladiusJournalParser.ValensChoiceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.valensChoice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValensChoice([NotNull] GladiusJournalParser.ValensChoiceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.journalTitle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJournalTitle([NotNull] GladiusJournalParser.JournalTitleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.journalTitle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJournalTitle([NotNull] GladiusJournalParser.JournalTitleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.journalText"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJournalText([NotNull] GladiusJournalParser.JournalTextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.journalText"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJournalText([NotNull] GladiusJournalParser.JournalTextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.shop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShop([NotNull] GladiusJournalParser.ShopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.shop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShop([NotNull] GladiusJournalParser.ShopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.gossip"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGossip([NotNull] GladiusJournalParser.GossipContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.gossip"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGossip([NotNull] GladiusJournalParser.GossipContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.minLevel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinLevel([NotNull] GladiusJournalParser.MinLevelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.minLevel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinLevel([NotNull] GladiusJournalParser.MinLevelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.quest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuest([NotNull] GladiusJournalParser.QuestContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.quest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuest([NotNull] GladiusJournalParser.QuestContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.prize"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrize([NotNull] GladiusJournalParser.PrizeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.prize"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrize([NotNull] GladiusJournalParser.PrizeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.success"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuccess([NotNull] GladiusJournalParser.SuccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.success"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuccess([NotNull] GladiusJournalParser.SuccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.failure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFailure([NotNull] GladiusJournalParser.FailureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.failure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFailure([NotNull] GladiusJournalParser.FailureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] GladiusJournalParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] GladiusJournalParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.encounter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEncounter([NotNull] GladiusJournalParser.EncounterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.encounter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEncounter([NotNull] GladiusJournalParser.EncounterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.onetime"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnetime([NotNull] GladiusJournalParser.OnetimeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.onetime"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnetime([NotNull] GladiusJournalParser.OnetimeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.lastDay"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLastDay([NotNull] GladiusJournalParser.LastDayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.lastDay"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLastDay([NotNull] GladiusJournalParser.LastDayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.relativeDay"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelativeDay([NotNull] GladiusJournalParser.RelativeDayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.relativeDay"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelativeDay([NotNull] GladiusJournalParser.RelativeDayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterItem([NotNull] GladiusJournalParser.ItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitItem([NotNull] GladiusJournalParser.ItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.yank"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterYank([NotNull] GladiusJournalParser.YankContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.yank"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitYank([NotNull] GladiusJournalParser.YankContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GladiusJournalParser.location"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocation([NotNull] GladiusJournalParser.LocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GladiusJournalParser.location"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocation([NotNull] GladiusJournalParser.LocationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
