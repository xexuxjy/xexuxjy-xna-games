//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Prizes.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class PrizesLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, ID=6, WS=7, INT=8, OBR=9, CBR=10, 
		COMMA=11, STRING=12, SINGLELINE_COMMENT=13;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "ID", "WS", "INT", "OBR", "CBR", 
		"COMMA", "STRING", "ESC", "UNICODE", "HEX", "SINGLELINE_COMMENT"
	};


	public PrizesLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PrizesLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'PRIZE'", "'PRIZECASH'", "'PRIZEEXP'", "'PRIZEITEM'", "'PRIZEBADGE'", 
		null, null, null, "'{'", "'}'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, "ID", "WS", "INT", "OBR", "CBR", "COMMA", 
		"STRING", "SINGLELINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Prizes.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static PrizesLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\xF', '\x8D', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x6', '\a', 'S', '\n', 
		'\a', '\r', '\a', '\xE', '\a', 'T', '\x3', '\b', '\x6', '\b', 'X', '\n', 
		'\b', '\r', '\b', '\xE', '\b', 'Y', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x5', '\t', '_', '\n', '\t', '\x3', '\t', '\x6', '\t', '\x62', '\n', 
		'\t', '\r', '\t', '\xE', '\t', '\x63', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\a', '\r', 'o', '\n', '\r', '\f', '\r', '\xE', '\r', 'r', 
		'\v', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x5', '\xE', 'y', '\n', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\a', 
		'\x11', '\x87', '\n', '\x11', '\f', '\x11', '\xE', '\x11', '\x8A', '\v', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x2', '\x2', '\x12', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', 
		'\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\x2', '\x1D', '\x2', '\x1F', '\x2', '!', '\xF', '\x3', 
		'\x2', '\t', '\x3', '\x2', '\x63', '|', '\x5', '\x2', '\v', '\f', '\xF', 
		'\xF', '\"', '\"', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '$', '$', 
		'^', '^', '\n', '\x2', '$', '$', '\x31', '\x31', '^', '^', '\x64', '\x64', 
		'h', 'h', 'p', 'p', 't', 't', 'v', 'v', '\x5', '\x2', '\x32', ';', '\x43', 
		'H', '\x63', 'h', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x2', '\x91', 
		'\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x3', '#', '\x3', '\x2', '\x2', 
		'\x2', '\x5', ')', '\x3', '\x2', '\x2', '\x2', '\a', '\x33', '\x3', '\x2', 
		'\x2', '\x2', '\t', '<', '\x3', '\x2', '\x2', '\x2', '\v', '\x46', '\x3', 
		'\x2', '\x2', '\x2', '\r', 'R', '\x3', '\x2', '\x2', '\x2', '\xF', 'W', 
		'\x3', '\x2', '\x2', '\x2', '\x11', '^', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'\x65', '\x3', '\x2', '\x2', '\x2', '\x15', 'g', '\x3', '\x2', '\x2', 
		'\x2', '\x17', 'i', '\x3', '\x2', '\x2', '\x2', '\x19', 'k', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', 'u', '\x3', '\x2', '\x2', '\x2', '\x1D', 'z', '\x3', 
		'\x2', '\x2', '\x2', '\x1F', '\x80', '\x3', '\x2', '\x2', '\x2', '!', 
		'\x82', '\x3', '\x2', '\x2', '\x2', '#', '$', '\a', 'R', '\x2', '\x2', 
		'$', '%', '\a', 'T', '\x2', '\x2', '%', '&', '\a', 'K', '\x2', '\x2', 
		'&', '\'', '\a', '\\', '\x2', '\x2', '\'', '(', '\a', 'G', '\x2', '\x2', 
		'(', '\x4', '\x3', '\x2', '\x2', '\x2', ')', '*', '\a', 'R', '\x2', '\x2', 
		'*', '+', '\a', 'T', '\x2', '\x2', '+', ',', '\a', 'K', '\x2', '\x2', 
		',', '-', '\a', '\\', '\x2', '\x2', '-', '.', '\a', 'G', '\x2', '\x2', 
		'.', '/', '\a', '\x45', '\x2', '\x2', '/', '\x30', '\a', '\x43', '\x2', 
		'\x2', '\x30', '\x31', '\a', 'U', '\x2', '\x2', '\x31', '\x32', '\a', 
		'J', '\x2', '\x2', '\x32', '\x6', '\x3', '\x2', '\x2', '\x2', '\x33', 
		'\x34', '\a', 'R', '\x2', '\x2', '\x34', '\x35', '\a', 'T', '\x2', '\x2', 
		'\x35', '\x36', '\a', 'K', '\x2', '\x2', '\x36', '\x37', '\a', '\\', '\x2', 
		'\x2', '\x37', '\x38', '\a', 'G', '\x2', '\x2', '\x38', '\x39', '\a', 
		'G', '\x2', '\x2', '\x39', ':', '\a', 'Z', '\x2', '\x2', ':', ';', '\a', 
		'R', '\x2', '\x2', ';', '\b', '\x3', '\x2', '\x2', '\x2', '<', '=', '\a', 
		'R', '\x2', '\x2', '=', '>', '\a', 'T', '\x2', '\x2', '>', '?', '\a', 
		'K', '\x2', '\x2', '?', '@', '\a', '\\', '\x2', '\x2', '@', '\x41', '\a', 
		'G', '\x2', '\x2', '\x41', '\x42', '\a', 'K', '\x2', '\x2', '\x42', '\x43', 
		'\a', 'V', '\x2', '\x2', '\x43', '\x44', '\a', 'G', '\x2', '\x2', '\x44', 
		'\x45', '\a', 'O', '\x2', '\x2', '\x45', '\n', '\x3', '\x2', '\x2', '\x2', 
		'\x46', 'G', '\a', 'R', '\x2', '\x2', 'G', 'H', '\a', 'T', '\x2', '\x2', 
		'H', 'I', '\a', 'K', '\x2', '\x2', 'I', 'J', '\a', '\\', '\x2', '\x2', 
		'J', 'K', '\a', 'G', '\x2', '\x2', 'K', 'L', '\a', '\x44', '\x2', '\x2', 
		'L', 'M', '\a', '\x43', '\x2', '\x2', 'M', 'N', '\a', '\x46', '\x2', '\x2', 
		'N', 'O', '\a', 'I', '\x2', '\x2', 'O', 'P', '\a', 'G', '\x2', '\x2', 
		'P', '\f', '\x3', '\x2', '\x2', '\x2', 'Q', 'S', '\t', '\x2', '\x2', '\x2', 
		'R', 'Q', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\x3', '\x2', '\x2', '\x2', 
		'T', 'R', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\x3', '\x2', '\x2', '\x2', 
		'U', '\xE', '\x3', '\x2', '\x2', '\x2', 'V', 'X', '\t', '\x3', '\x2', 
		'\x2', 'W', 'V', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', '\x2', 
		'\x2', 'Y', 'W', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\x3', '\x2', '\x2', 
		'\x2', 'Z', '[', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\b', '\b', '\x2', 
		'\x2', '\\', '\x10', '\x3', '\x2', '\x2', '\x2', ']', '_', '\a', '/', 
		'\x2', '\x2', '^', ']', '\x3', '\x2', '\x2', '\x2', '^', '_', '\x3', '\x2', 
		'\x2', '\x2', '_', '\x61', '\x3', '\x2', '\x2', '\x2', '`', '\x62', '\t', 
		'\x4', '\x2', '\x2', '\x61', '`', '\x3', '\x2', '\x2', '\x2', '\x62', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x63', '\x61', '\x3', '\x2', '\x2', 
		'\x2', '\x63', '\x64', '\x3', '\x2', '\x2', '\x2', '\x64', '\x12', '\x3', 
		'\x2', '\x2', '\x2', '\x65', '\x66', '\a', '}', '\x2', '\x2', '\x66', 
		'\x14', '\x3', '\x2', '\x2', '\x2', 'g', 'h', '\a', '\x7F', '\x2', '\x2', 
		'h', '\x16', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\a', '.', '\x2', '\x2', 
		'j', '\x18', '\x3', '\x2', '\x2', '\x2', 'k', 'p', '\a', '$', '\x2', '\x2', 
		'l', 'o', '\x5', '\x1B', '\xE', '\x2', 'm', 'o', '\n', '\x5', '\x2', '\x2', 
		'n', 'l', '\x3', '\x2', '\x2', '\x2', 'n', 'm', '\x3', '\x2', '\x2', '\x2', 
		'o', 'r', '\x3', '\x2', '\x2', '\x2', 'p', 'n', '\x3', '\x2', '\x2', '\x2', 
		'p', 'q', '\x3', '\x2', '\x2', '\x2', 'q', 's', '\x3', '\x2', '\x2', '\x2', 
		'r', 'p', '\x3', '\x2', '\x2', '\x2', 's', 't', '\a', '$', '\x2', '\x2', 
		't', '\x1A', '\x3', '\x2', '\x2', '\x2', 'u', 'x', '\a', '^', '\x2', '\x2', 
		'v', 'y', '\t', '\x6', '\x2', '\x2', 'w', 'y', '\x5', '\x1D', '\xF', '\x2', 
		'x', 'v', '\x3', '\x2', '\x2', '\x2', 'x', 'w', '\x3', '\x2', '\x2', '\x2', 
		'y', '\x1C', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\a', 'w', '\x2', '\x2', 
		'{', '|', '\x5', '\x1F', '\x10', '\x2', '|', '}', '\x5', '\x1F', '\x10', 
		'\x2', '}', '~', '\x5', '\x1F', '\x10', '\x2', '~', '\x7F', '\x5', '\x1F', 
		'\x10', '\x2', '\x7F', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', 
		'\t', '\a', '\x2', '\x2', '\x81', ' ', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x83', '\a', '\x31', '\x2', '\x2', '\x83', '\x84', '\a', '\x31', '\x2', 
		'\x2', '\x84', '\x88', '\x3', '\x2', '\x2', '\x2', '\x85', '\x87', '\n', 
		'\b', '\x2', '\x2', '\x86', '\x85', '\x3', '\x2', '\x2', '\x2', '\x87', 
		'\x8A', '\x3', '\x2', '\x2', '\x2', '\x88', '\x86', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x89', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8B', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x88', '\x3', '\x2', '\x2', '\x2', '\x8B', 
		'\x8C', '\b', '\x11', '\x2', '\x2', '\x8C', '\"', '\x3', '\x2', '\x2', 
		'\x2', '\v', '\x2', 'T', 'Y', '^', '\x63', 'n', 'p', 'x', '\x88', '\x3', 
		'\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
