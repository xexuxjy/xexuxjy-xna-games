----------------------------------------------------------------------
CHANGELOG
----------------------------------------------------------------------

1.4.3 (2/15/2020)

	- Updated to latest ILPatcher, which removes the use of the 'cpobj' instruction. This should make the library compatible with Unity's IL2CPP

1.4.2 (2/7/2020)

	- Refresh nvtt binaries that disables the parallel dispatcher in native code. It would cause the GC thread to hang on finalize preventing apps from closing gracefully.
		- nvtt windows binaries no longer depend on VCRuntime140 (it is now statically linked).

1.4.1 (9/8/2019)

	- Updated nvtt to a refreshed version of 2.1.1, which adds some missing C-API functionality, namely the compressor can now output to DDS10 and KTX formats.
	- Fixed a memory leak

1.4 (10/28/2018)

	- Updated FreeImage to 3.18.0
	- Updated nvtt to a refreshed version of 2.1.1, which modifies the C-API slightly to expose 2D texture array support in the compressor
		- A PR was submitted and accepted to the official repository for this change, the C-API hasn't been updated in some time as new features have been added to the C++ API
	- NvTextureToolsLibrary has been updated to work with C-API changes, as well as some missing enums have been added
	- Added x64 linux native binary, x64 macOS native binary
		- Tested on Ubuntu 18.04 and MacOS 10.13 (High Sierra)
	- Added "ThrowOnLoadFailure" to configure getting back a "false" if native library fails to load or throw an exception (the default). Mono should no longer
	  throw a "NotImplemented" exception because of trying to get the error code from windows.
	- !!Breaking Change!! Native DLLs are deployed differently and resolved at runtime differently
		- Removed "DefaultLibraryPathXXBit" properties from UnmanagedLibrary, they are meaningless now (and probably not used)
		- Introduced "UnmanagedLibraryResolver" that lets you set the following to completely configure native DLL loading:
				1. Multiple probing paths
				2. Multiple fallback library names (e.g. versioned binaries)
				3. Override name if the default native library name is not good enough for your tastes.
		- Search order of the native DLL is as follows:
				1. Search user-specified probing paths
				2. Search {AppBaseDirectory}/runtimes/{RID}/native/
				3. Search {AppBaseDirectory}/
				4. Search nuget cache based on assembly name/informational version ({UserProfile}/.nuget/packages/TeximpNet/{PackageVersion}/runtimes/{RID}/native/)
				5. If all above failed, return the given name of the DLL (or override name) and let the OS try and find it (different OS' may have different strategies).
		- The resolver is only used in UnmanagedLibrary.LoadLibrary(). The other two overloads still take in a user-supplied path/to/your/DLL.
		- Native DLLs are now deployed in the "runtimes" folder of the nuget package. This means they are now picked up as dependencies by netcore (*.deps.json)
			and automatically get copied during the "dotnet publish" command. During development, the system will try and locate the native DLLs in the nuget cache
			(.net framework 3.5/4.0 targets still use the MSBuild targets file to copy the runtime folder to the output folder). The folder structure looks like this:
				- runtimes/win-x64/native/nvtt.dll
				- runtimes/win-x86/native/nvtt.dll
				- runtimes/osx-x64/native/libnvtt.dll
				- runtimes/linux-x64/native/libnvtt.dll
		- All native binaries are named "FreeImage","libFreeImage", "nvtt", "libnvtt" depending on platform, since we're putting them in "well known" architecture folders, no need to have unique names
  - [Source Only] Added a Unity script that will make it easier for users to load the native DLLs when running in Editor/Standalone Unity 3D
    - Build outputs a folder called "UnityPlugin" which you can drag and drop into the Unity Editor. A package will be available in the Asset Store as well.

Targets:

FreeImage 3.18.0
Nvidia Texture Tools 2.1.1 (commit 8a076c8e8db01c5a06430a12ae19cea65eed05f0)




======================================================================





1.3 (4/1/2018)

	- Added DDS File read/write support (DDSFile / DDSContainer).
	- Removed CompressedImageData in favor of DDSContainer / MipData (consolidated the APIs)
	- Updated to C# 7.2 compiler (generated assemblies are backwards compatible)
	- Minor changes to some helpers:
		- Moved a bunch of image-related routines out of MemoryHelper into a new static class called ImageHelper, these are mostly used internally but are public APIs
			and thus a breaking change.
		- Synced MemoryHelper to current up-to-date C# 7.2 implementation from Tesla 3D Engine. Mostly should have added functions and updated the internals of a few.
		- Added StreamTransferBuffer, a wrapper around a temporary byte buffer that can interop with unmanaged memory, copied from Tesla 3D Engine. Used internally, but is
			still a public API

Targets:

FreeImage 3.17.0
Nvidia Texture Tools 2.1.1




======================================================================




1.2 (2/14/2018)

	- Now available on .NET Core!! (.NET Standard 1.3 target). Nuget package also supports .NET Framework 3.5 and 4.x targets.
	- Shipping Linux binaries (x64 only) for NVVT and FreeImage (tested on Ubuntu 17.10)
	- Default native library names are handled slightly differently now. The default name is w/o an extension, and each platform initializer will append a prefix/extension
	- Unmanaged library loading is now thread safe
	- Simplified Compressor SetData/SetMipmapData API, they also properly handle input images that are padded
	- Can set 3D image to compressor, 2D array (non-cube) are possible, but the C-API doesn't expose setting an array count yet...
	- Added some more formats to convert FreeImage surfaces to
	- Added a Surface.LoadFromRawData method to load from a 32-bit BGRA/RGBA image
	- Added queries for bitmap palettes

Targets:

FreeImage 3.17.0
Nvidia Texture Tools 2.1.1




======================================================================



1.1 (12-28-2016)

  - Major documentation pass
  - Reworked some of the Compression API to be easier to use
  - Added more methods to Surface, Compression API
  - Numerous bug fixes

Targets:

FreeImage 3.17.0
Nvidia Texture Tools 2.1.0



======================================================================



1.0 (5-20-2016)

	- Initial release.